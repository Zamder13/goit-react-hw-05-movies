{"version":3,"file":"static/js/290.7c2b799b.chunk.js","mappings":"gUAEMA,EAAQ,+BACRC,EAAG,mCAEHC,EAAU,mCAAG,WAAOC,EAAKC,GAAZ,gGAEQC,IAAAA,IAAUF,EAAKC,GAFvB,cAETE,EAFS,yBAGRA,GAHQ,wHAAH,wDAST,SAASC,EAAiBC,GAC/B,OAAON,EAAW,GAAD,OACZF,EADY,wCAC4BC,EAD5B,iBACwCO,IAIpD,IAAMC,EAAc,SAAAC,GACzB,OAAOR,EAAW,GAAD,OAAIF,EAAJ,kBAAsBU,EAAtB,oBAAoCT,KAG1CU,EAAiB,SAAAD,GAC5B,OAAOR,EAAW,GAAD,OACZF,EADY,kBACMU,EADN,4BAC4BT,EAD5B,qBAINW,EAAiB,SAAAF,GAC5B,OAAOR,EAAW,GAAD,OACZF,EADY,kBACMU,EADN,4BAC4BT,EAD5B,4BAUNY,EAAgB,SAACC,EAAMN,GAClC,OAAON,EAAW,GAAD,OACZF,EADY,iCACqBC,EADrB,gCACgDO,EADhD,qCACiFM,M,8GCqCpG,UAjEyB,WAAO,IAAD,EACrBC,GAAUC,EAAAA,EAAAA,MAAVD,MAEAE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAYQ,GAASM,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAAQG,QAC/C,CAACP,KAGF,iCACE,UAAC,EAAAQ,QAAD,YACE,UAAC,EAAAC,WAAD,YACE,SAAC,KAAD,CAAMC,GAAIZ,EAAMa,SAAUb,MAAK,UAAEA,EAAMa,gBAAR,aAAE,EAAgBC,MAAjD,UACE,mBAAQC,KAAK,SAASC,MAAO,CAAEC,QAAS,SAAxC,uBAKDZ,EAAKa,aACJ,gBACEC,IAAG,yCAAoCd,EAAKa,aAC5CE,IAAKf,EAAKgB,kBAGZ,gBAAKF,IAAKG,EAAOF,IAAKf,EAAKkB,YAG/B,UAAC,EAAAC,UAAD,YACE,8BAAMnB,EAAKgB,mBACX,0BACE,0CADF,IACyBhB,EAAKoB,iBAE9B,0BACE,sCACCpB,EAAKqB,YAEPrB,EAAKsB,SACJ,UAAC,EAAAC,OAAD,YACE,mCACCvB,EAAKsB,OAAOE,KAAI,SAAAC,GAAK,OACpB,wBAAoBA,EAAM/B,MAAjB+B,EAAMnC,WAIrB,UAAC,EAAAoC,QAAD,YACE,yBACE,SAAC,KAAD,CAAMnB,GAAG,OAAOZ,MAAOA,EAAvB,qBAIF,yBACE,SAAC,KAAD,CAAMY,GAAG,UAAUZ,MAAOA,EAA1B,iCAOR,SAAC,KAAD,S,2NCxEOU,EAAUsB,EAAAA,GAAAA,IAAH,uGAMPrB,EAAaqB,EAAAA,GAAAA,IAAH,uFAQVR,EAAYQ,EAAAA,GAAAA,IAAH,oJAYTJ,EAASI,EAAAA,GAAAA,GAAH,oGAOND,EAAUC,EAAAA,GAAAA,GAAH,uQ","sources":["components/api/api.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = `48dc0fe6086a9431dd528d88acba16d2`;\n\nconst fetchFilms = async (url, config) => {\n  try {\n    const response = await axios.get(url, config);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport function getTrendingFilms(page) {\n  return fetchFilms(\n    `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=${page}`\n  );\n}\n\nexport const getFilmByID = id => {\n  return fetchFilms(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getFilmCredits = id => {\n  return fetchFilms(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n};\nexport const getFilmReviews = id => {\n  return fetchFilms(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n};\n\nexport const getFilmByName = name => {\n  return fetchFilms(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=true&query=${name}`\n  );\n};\nexport const getFilsByPage = (name, page) => {\n  return fetchFilms(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=true&query=${name}`\n  );\n};\n\n// https://api.themoviedb.org/3/movie/157336?api_key={api_key}?&include_adult=true&query=${name}\n","import { getFilmByID } from 'components/api/api';\nimport { useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport image from '../../images/notFound.jpg';\n\nimport {\n  Wrapper,\n  Genres,\n  InfoThumb,\n  Details,\n  ImageThumb,\n} from './MovieDetailsPage.styled.jsx';\n\nconst MovieDetailsPage = () => {\n  const { state } = useLocation();\n\n  const { movieId } = useParams();\n  const [film, setFilm] = useState([]);\n\n  useEffect(() => {\n    getFilmByID(movieId).then(({ data }) => setFilm(data));\n  }, [movieId]);\n\n  return (\n    <>\n      <Wrapper>\n        <ImageThumb>\n          <Link to={state.location} state={state.location?.query}>\n            <button type=\"button\" style={{ display: 'block' }}>\n              Go back\n            </button>\n          </Link>\n\n          {film.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n              alt={film.original_title}\n            />\n          ) : (\n            <img src={image} alt={film.title} />\n          )}\n        </ImageThumb>\n        <InfoThumb>\n          <h2> {film.original_title}</h2>\n          <p>\n            <b>User Average: </b> {film.vote_average}\n          </p>\n          <p>\n            <b>Overviev: </b>\n            {film.overview}\n          </p>\n          {film.genres && (\n            <Genres>\n              <b>Genres:</b>\n              {film.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </Genres>\n          )}\n          <Details>\n            <li>\n              <Link to=\"cast\" state={state}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={state}>\n                Reviews\n              </Link>\n            </li>\n          </Details>\n        </InfoThumb>\n      </Wrapper>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 14px;\n`;\n\nexport const ImageThumb = styled.div`\n  margin-bottom: 30px;\n\n  img {\n    margin-top: 15px;\n  }\n`;\n\nexport const InfoThumb = styled.div`\n  h2 {\n    margin-bottom: 30px;\n    margin-top: 50px;\n  }\n\n  p {\n    font-size: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  list-style: none;\n  margin-bottom: 50px;\n  gap: 8px;\n`;\n\nexport const Details = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 20px;\n\n  a {\n    text-decoration: none;\n    color: black;\n    transition: color 250ms linear;\n    &:hover {\n      color: rgb(216, 5, 5);\n    }\n  }\n  li {\n    font-size: 24px;\n  }\n`;\n"],"names":["BASE_URL","KEY","fetchFilms","url","config","axios","response","getTrendingFilms","page","getFilmByID","id","getFilmCredits","getFilmReviews","getFilsByPage","name","state","useLocation","movieId","useParams","useState","film","setFilm","useEffect","then","data","Wrapper","ImageThumb","to","location","query","type","style","display","poster_path","src","alt","original_title","image","title","InfoThumb","vote_average","overview","genres","Genres","map","genre","Details","styled"],"sourceRoot":""}