{"version":3,"file":"static/js/871.500c6d02.chunk.js","mappings":"gUAEMA,EAAQ,+BACRC,EAAG,mCAEHC,EAAU,mCAAG,WAAOC,EAAKC,GAAZ,gGAEQC,IAAAA,IAAUF,EAAKC,GAFvB,cAETE,EAFS,yBAGRA,GAHQ,wHAAH,wDAST,SAASC,EAAiBC,GAC/B,OAAON,EAAW,GAAD,OACZF,EADY,wCAC4BC,EAD5B,iBACwCO,IAIpD,IAAMC,EAAc,SAAAC,GACzB,OAAOR,EAAW,GAAD,OAAIF,EAAJ,kBAAsBU,EAAtB,oBAAoCT,KAG1CU,EAAiB,SAAAD,GAC5B,OAAOR,EAAW,GAAD,OACZF,EADY,kBACMU,EADN,4BAC4BT,EAD5B,qBAINW,EAAiB,SAAAF,GAC5B,OAAOR,EAAW,GAAD,OACZF,EADY,kBACMU,EADN,4BAC4BT,EAD5B,4BAUNY,EAAgB,SAACC,EAAMN,GAClC,OAAON,EAAW,GAAD,OACZF,EADY,iCACqBC,EADrB,gCACgDO,EADhD,qCACiFM,M,0FCVpG,UA3BgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAeG,GAASM,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAAWG,EAAKC,cAC1D,CAACR,KAGF,UAAC,EAAAS,QAAD,YACE,oCACCN,EAAQO,OAAS,GAChB,SAAC,EAAAC,KAAD,UACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,WACX,uBAAIF,EAAOG,eAHJH,EAAOlB,UAQpB,SAAC,EAAAsB,UAAD,qC,wJCxBKN,EAAOO,EAAAA,GAAAA,IAAH,mPAmBJT,EAAUS,EAAAA,GAAAA,IAAH,4KAUPD,EAAYC,EAAAA,GAAAA,EAAH","sources":["components/api/api.jsx","pages/Reviews/Reviews.jsx","pages/Reviews/Reviews.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = `48dc0fe6086a9431dd528d88acba16d2`;\n\nconst fetchFilms = async (url, config) => {\n  try {\n    const response = await axios.get(url, config);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport function getTrendingFilms(page) {\n  return fetchFilms(\n    `${BASE_URL}/trending/movie/week?api_key=${KEY}&page=${page}`\n  );\n}\n\nexport const getFilmByID = id => {\n  return fetchFilms(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n};\n\nexport const getFilmCredits = id => {\n  return fetchFilms(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n};\nexport const getFilmReviews = id => {\n  return fetchFilms(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n};\n\nexport const getFilmByName = name => {\n  return fetchFilms(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=true&query=${name}`\n  );\n};\nexport const getFilsByPage = (name, page) => {\n  return fetchFilms(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=true&query=${name}`\n  );\n};\n\n// https://api.themoviedb.org/3/movie/157336?api_key={api_key}?&include_adult=true&query=${name}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmReviews } from 'components/api/api';\nimport { List, Wrapper, BadResult } from './Reviews.styled.jsx';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    getFilmReviews(movieId).then(({ data }) => setReviews(data.results));\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <h3>Reviews</h3>\n      {reviews.length > 1 ? (\n        <List>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n              <p>{review.updated_at}</p>\n            </li>\n          ))}\n        </List>\n      ) : (\n        <BadResult>{`No reviews yet :(`}</BadResult>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const List = styled.div`\n  padding: 20px;\n  padding-top: 0;\n  list-style: none;\n\n  h4 {\n    font-size: 20px;\n    margin-bottom: 12px;\n  }\n\n  li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  p {\n    font-style: oblique;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  h3 {\n    text-align: center;\n    margin-bottom: 20px;\n    font-size: 22px;\n    background-color: rgb(216, 5, 5);\n    color: #ffffffdc;\n  }\n`;\n\nexport const BadResult = styled.p`\n  margin-top: 20px;\n  margin-bottom: 100px;\n  text-align: center;\n  font-size: 24px;\n`;\n"],"names":["BASE_URL","KEY","fetchFilms","url","config","axios","response","getTrendingFilms","page","getFilmByID","id","getFilmCredits","getFilmReviews","getFilsByPage","name","movieId","useParams","useState","reviews","setReviews","useEffect","then","data","results","Wrapper","length","List","map","review","author","content","updated_at","BadResult","styled"],"sourceRoot":""}